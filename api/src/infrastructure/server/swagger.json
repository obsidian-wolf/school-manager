{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UpdateParentRequest": {
				"properties": {
					"phone": {
						"type": "string"
					},
					"surname": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"phone",
					"surname",
					"name"
				],
				"type": "object"
			},
			"UpdateStudentRequest": {
				"properties": {
					"teacher_id": {
						"type": "string"
					},
					"grade": {
						"type": "number",
						"format": "double"
					},
					"gender": {
						"type": "string",
						"enum": [
							"Male",
							"Female"
						]
					},
					"date_of_birth": {
						"type": "string",
						"format": "date-time"
					},
					"surname": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"teacher_id",
					"grade",
					"gender",
					"date_of_birth",
					"surname",
					"name"
				],
				"type": "object"
			},
			"CreateStudentRequest": {
				"$ref": "#/components/schemas/UpdateStudentRequest"
			},
			"ObjectId": {
				"type": "string",
				"description": "A class representation of the BSON ObjectId type."
			},
			"ActorTypes": {
				"enum": [
					"User",
					"Assistant"
				],
				"type": "string"
			},
			"TextResponse": {
				"properties": {
					"payload": {
						"properties": {
							"delay": {
								"type": "number",
								"format": "double"
							},
							"message": {
								"type": "string"
							},
							"slate": {
								"properties": {
									"messageDelayMilliseconds": {
										"type": "number",
										"format": "double"
									},
									"content": {
										"items": {
											"properties": {
												"children": {
													"items": {
														"properties": {
															"text": {
																"type": "string"
															}
														},
														"required": [
															"text"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"children"
											],
											"type": "object"
										},
										"type": "array"
									},
									"id": {
										"type": "string"
									}
								},
								"required": [
									"messageDelayMilliseconds",
									"content",
									"id"
								],
								"type": "object"
							}
						},
						"required": [
							"message"
						],
						"type": "object"
					},
					"type": {
						"type": "string",
						"enum": [
							"text"
						],
						"nullable": false
					},
					"time": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"payload",
					"type"
				],
				"type": "object",
				"description": "Responses"
			},
			"IntentPayload": {
				"properties": {
					"entities": {
						"items": {},
						"type": "array"
					},
					"actions": {
						"items": {},
						"type": "array"
					},
					"intent": {
						"properties": {
							"name": {
								"type": "string"
							}
						},
						"required": [
							"name"
						],
						"type": "object"
					},
					"label": {
						"type": "string"
					},
					"query": {
						"type": "string"
					}
				},
				"required": [
					"entities",
					"actions",
					"intent",
					"label",
					"query"
				],
				"type": "object",
				"description": "Generic payloads"
			},
			"PathPayload": {
				"properties": {
					"actions": {
						"items": {},
						"type": "array"
					},
					"label": {
						"type": "string"
					}
				},
				"required": [
					"actions",
					"label"
				],
				"type": "object"
			},
			"ChoiceRequest": {
				"anyOf": [
					{
						"properties": {
							"payload": {
								"$ref": "#/components/schemas/IntentPayload"
							},
							"type": {
								"type": "string",
								"enum": [
									"intent"
								],
								"nullable": false
							}
						},
						"required": [
							"payload",
							"type"
						],
						"type": "object"
					},
					{
						"properties": {
							"payload": {
								"$ref": "#/components/schemas/PathPayload"
							},
							"type": {
								"type": "string"
							}
						},
						"required": [
							"payload",
							"type"
						],
						"type": "object"
					}
				]
			},
			"ChoiceResponse": {
				"properties": {
					"payload": {
						"properties": {
							"buttons": {
								"items": {
									"properties": {
										"request": {
											"$ref": "#/components/schemas/ChoiceRequest"
										},
										"name": {
											"type": "string"
										}
									},
									"required": [
										"request",
										"name"
									],
									"type": "object"
								},
								"type": "array"
							},
							"message": {
								"type": "string"
							}
						},
						"required": [
							"buttons",
							"message"
						],
						"type": "object"
					},
					"type": {
						"type": "string",
						"enum": [
							"choice"
						],
						"nullable": false
					},
					"time": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"payload",
					"type",
					"time"
				],
				"type": "object"
			},
			"SuccessRequest": {
				"properties": {
					"payload": {},
					"type": {
						"type": "string",
						"enum": [
							"success"
						],
						"nullable": false
					}
				},
				"required": [
					"type"
				],
				"type": "object"
			},
			"FailRequest": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"fail"
						],
						"nullable": false
					}
				},
				"required": [
					"type"
				],
				"type": "object"
			},
			"LocationRequestResponse": {
				"properties": {
					"paths": {
						"items": {
							"properties": {
								"event": {
									"anyOf": [
										{
											"$ref": "#/components/schemas/SuccessRequest"
										},
										{
											"$ref": "#/components/schemas/FailRequest"
										}
									]
								}
							},
							"required": [
								"event"
							],
							"type": "object"
						},
						"type": "array"
					},
					"defaultPath": {
						"type": "number",
						"format": "double"
					},
					"payload": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"location_request"
						],
						"nullable": false
					},
					"time": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"type"
				],
				"type": "object"
			},
			"VoiceflowResponse": {
				"anyOf": [
					{
						"properties": {
							"type": {
								"type": "string",
								"enum": [
									"path",
									"end"
								]
							}
						},
						"required": [
							"type"
						],
						"type": "object"
					},
					{
						"$ref": "#/components/schemas/TextResponse"
					},
					{
						"$ref": "#/components/schemas/ChoiceResponse"
					},
					{
						"$ref": "#/components/schemas/LocationRequestResponse"
					}
				]
			},
			"Message": {
				"properties": {
					"voiceflowResponses": {
						"items": {
							"$ref": "#/components/schemas/VoiceflowResponse"
						},
						"type": "array"
					},
					"is_deleted": {
						"type": "boolean"
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					},
					"parent_text": {
						"type": "string"
					},
					"actor": {
						"$ref": "#/components/schemas/ActorTypes"
					}
				},
				"required": [
					"is_deleted",
					"created_at",
					"actor"
				],
				"type": "object"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "school-manager-api",
		"version": "1.0",
		"contact": {}
	},
	"paths": {
		"/user/parent/{parentId}": {
			"put": {
				"operationId": "UpdateParent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"type": {
											"type": "string",
											"enum": [
												"admin",
												"parent"
											]
										},
										"password": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"surname": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"students": {
											"items": {
												"properties": {
													"grade": {
														"type": "number",
														"format": "double"
													},
													"gender": {
														"type": "string",
														"enum": [
															"Male",
															"Female"
														]
													},
													"date_of_birth": {
														"type": "string",
														"format": "date-time"
													},
													"surname": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													},
													"teacher_id": {
														"type": "string"
													}
												},
												"required": [
													"grade",
													"gender",
													"date_of_birth",
													"surname",
													"name",
													"id",
													"teacher_id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"type",
										"password",
										"phone",
										"email",
										"surname",
										"name",
										"students",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateParentRequest"
							}
						}
					}
				}
			}
		},
		"/user/parent/{parentId}/student": {
			"post": {
				"operationId": "CreateStudent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"type": {
											"type": "string",
											"enum": [
												"admin",
												"parent"
											]
										},
										"password": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"surname": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"students": {
											"items": {
												"properties": {
													"grade": {
														"type": "number",
														"format": "double"
													},
													"gender": {
														"type": "string",
														"enum": [
															"Male",
															"Female"
														]
													},
													"date_of_birth": {
														"type": "string",
														"format": "date-time"
													},
													"surname": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													},
													"teacher_id": {
														"type": "string"
													}
												},
												"required": [
													"grade",
													"gender",
													"date_of_birth",
													"surname",
													"name",
													"id",
													"teacher_id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"type",
										"password",
										"phone",
										"email",
										"surname",
										"name",
										"students",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateStudentRequest"
							}
						}
					}
				}
			}
		},
		"/user/parent/{parentId}/student/{studentId}": {
			"put": {
				"operationId": "UpdateStudent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"type": {
											"type": "string",
											"enum": [
												"admin",
												"parent"
											]
										},
										"password": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"surname": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"students": {
											"items": {
												"properties": {
													"grade": {
														"type": "number",
														"format": "double"
													},
													"gender": {
														"type": "string",
														"enum": [
															"Male",
															"Female"
														]
													},
													"date_of_birth": {
														"type": "string",
														"format": "date-time"
													},
													"surname": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													},
													"teacher_id": {
														"type": "string"
													}
												},
												"required": [
													"grade",
													"gender",
													"date_of_birth",
													"surname",
													"name",
													"id",
													"teacher_id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"type",
										"password",
										"phone",
										"email",
										"surname",
										"name",
										"students",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "studentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateStudentRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteStudent",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"type": {
											"type": "string",
											"enum": [
												"admin",
												"parent"
											]
										},
										"password": {
											"type": "string"
										},
										"phone": {
											"type": "string"
										},
										"email": {
											"type": "string"
										},
										"surname": {
											"type": "string"
										},
										"name": {
											"type": "string"
										},
										"students": {
											"items": {
												"properties": {
													"grade": {
														"type": "number",
														"format": "double"
													},
													"gender": {
														"type": "string",
														"enum": [
															"Male",
															"Female"
														]
													},
													"date_of_birth": {
														"type": "string",
														"format": "date-time"
													},
													"surname": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"id": {
														"type": "string"
													},
													"teacher_id": {
														"type": "string"
													}
												},
												"required": [
													"grade",
													"gender",
													"date_of_birth",
													"surname",
													"name",
													"id",
													"teacher_id"
												],
												"type": "object"
											},
											"type": "array"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"type",
										"password",
										"phone",
										"email",
										"surname",
										"name",
										"students",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "parentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "studentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/message": {
			"get": {
				"operationId": "GetChat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"messages": {
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"type": "array"
										},
										"user_id": {
											"$ref": "#/components/schemas/ObjectId"
										},
										"created_at": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"messages",
										"user_id",
										"created_at",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Message"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/message/{chatId}": {
			"post": {
				"operationId": "SendMessage",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"messages": {
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"type": "array"
										},
										"user_id": {
											"$ref": "#/components/schemas/ObjectId"
										},
										"created_at": {
											"type": "string",
											"format": "date-time"
										},
										"id": {
											"type": "string"
										}
									},
									"required": [
										"messages",
										"user_id",
										"created_at",
										"id"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Message"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "chatId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/heartbeat": {
			"get": {
				"operationId": "ClassHeartbeat",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"port": {
											"type": "string"
										},
										"date": {
											"type": "string"
										}
									},
									"required": [
										"message",
										"port",
										"date"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Ping .. pong",
				"tags": [
					"Heartbeat"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"pam_token": {
											"type": "string"
										},
										"jwt": {
											"type": "string"
										}
									},
									"required": [
										"pam_token",
										"jwt"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									}
								},
								"required": [
									"password",
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}