{
	"openapi": "3.0.0",
	"info": {
		"title": "Prescribery API",
		"version": "1.0.0"
	},
	"servers": [
		{
			"url": "/api/dtg/v1/"
		}
	],
	"paths": {
		"/access-token": {
			"post": {
				"tags": ["Access Token"],
				"description": "Generates authentication bearer token for api authentication",
				"operationId": "accessToken",
				"requestBody": {
					"description": "API key for authentication",
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"required": ["api_key"],
								"properties": {
									"api_key": {
										"type": "string"
									}
								},
								"type": "object",
								"example": {
									"api_key": "EN0CRhU3dH3EZZrTQw9ibeFDsCUBJfTG0irC6UZ9baFbsfnEOa5y4eQqvQx="
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"token_type": {
											"type": "string"
										},
										"expires_in": {
											"type": "integer"
										},
										"access_token": {
											"type": "string"
										},
										"refresh_token": {
											"type": "string"
										}
									},
									"type": "object",
									"example": {
										"token_type": "Bearer",
										"expires_in": "3600",
										"access_token": "eyJ0eXAiOiJKV4Q9LCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiZDg2NmJlZTU3ZTk0ODg0MzM1MmNkNmIzNzNhOTRlODYxMmU1MWMxNzc3ZDMxMzg3MGU1Y2E5OTEzNTgydTgzZjE3MmFjZjI4N2NhMjk1M2MiLCJpYXQiOjE2MjU2NzUyMzUsIm5iZiI6MTYyNTY3NTIzNSwiZXhwIjoxNjI1Njc4ODM1LCJzdWIiOiI0MSIsInNjb3BlcyI6WyIqIl19.zdrwmZPZms4pA1VincFZpsbeNNSqCYOeKivTER6zCFRvNawVfBoTCtTGtbb6Sx--oBXx7DndNJ4ZsOterNFVx1H4bYtjD-oR31qwat2IlJEuQiIJtutmuqKpxIcD9OS9xYaBEEGnIQ73GCSfJssu6bKvDwZFMOGkuLkDxLJA-akXZvbr0Nr2ePAnVZKCvchDDyPOkYlJ4Nq9oeYVguZRg4lQr5_jBv8eU5Pvdh4tyT6_WbStlrhRcX6npE5gFwQjfdMRVB7h7Lvge9DaGYdQOyM0xp_iv5vAf1KUK9UfV_erZ8C24qVvQSEW0ZS3IXAC3TSmTJqyWUiNz9lfHR5ufFlGg0lMG6QNNgL_zIQjweEKxFZEYY4wTXAcvMHOWrhztJ2sZq-gwO4CqTuJ-dSDySDgEMB_vkfp5DQsWpi2NITXP3ZNBjIee0GAhnPiPGb7XIgQVAbMZgNc03Sw_59BWkzguFkhVfPQWSaDhyudhTWTxaPRV_fbAty4sZySOaIA5c_psaa6GVzS3H2Bu5WiZHHotLvpwETyNvBtxqeTrDIg1VBTqQDsK_ACcZyv6fGhHxtcc5LQdpntFYOENb7CLkgAgOUVVnQLi18bFJxANvlvL0G6GTvDVl46qfKjJqM0mthNVyixTGA6kYKcPO9BRfzKEPbbwXI2ThZFj9rrEJI",
										"refresh_token": "eyJ0eXAiOiJKV4Q9LCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIyIiwianRpIjoiZDg2NmJlZTU3ZTk0ODg0MzM1MmNkNmIzNzNhOTRlODYxMmU1MWMxNzc3ZDMxMzg3MGU1Y2E5OTEzNTgydTgzZjE3MmFjZjI4N2NhMjk1M2MiLCJpYXQiOjE2MjU2NzUyMzUsIm5iZiI6MTYyNTY3NTIzNSwiZXhwIjoxNjI1Njc4ODM1LCJzdWIiOiI0MSIsInNjb3BlcyI6WyIqIl19.zdrwmZPZms4pA1VincFZpsbeNNSqCYOeKivTER6zCFRvNawVfBoTCtTGtbb6Sx--oBXx7DndNJ4ZsOterNFVx1H4bYtjD-oR31qwat2IlJEuQiIJtutmuqKpxIcD9OS9xYaBEEGnIQ73GCSfJssu6bKvDwZFMOGkuLkDxLJA-akXZvbr0Nr2ePAnVZKCvchDDyPOkYlJ4Nq9oeYVguZRg4lQr5_jBv8eU5Pvdh4tyT6_WbStlrhRcX6npE5gFwQjfdMRVB7h7Lvge9DaGYdQOyM0xp_iv5vAf1KUK9UfV_erZ8C24qVvQSEW0ZS3IXAC3TSmTJqyWUiNz9lfHR5ufFlGg0lMG6QNNgL_zIQjweEKxFZEYY4wTXAcvMHOWrhztJ2sZq-gwO4CqTuJ-dSDySDgEMB_vkfp5DQsWpi2NITXP3ZNBjIee0GAhnPiPGb7XIgQVAbMZgNc03Sw_59BWkzguFkhVfPQWSaDhyudhTWTxaPRV_fbAty4sZySOaIA5c_psaa6GVzS3H2Bu5WiZHHotLvpwETyNvBtxqeTrDIg1VBTqQDsK_ACcZyv6fGhHxtcc5LQdpntFYOENb7CLkgAgOUVVnQLi18bFJxANvlvL0G6GTvDVl46qfKjJqM0mthNVyixTGA6kYKcPO9BRfzKEPbbwXI2ThZFj9rrEJI"
									}
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
		"/agents": {
			"get": {
				"tags": ["Agents"],
				"summary": "Agent Listing",
				"description": "List all the agents in database",
				"parameters": [
					{
						"name": "license_state",
						"in": "query",
						"description": "Filter resources by license state",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Filter resources by page number",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "1"
						}
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Filter resources by total rows to show per page",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "10"
						}
					},
					{
						"name": "sort_column",
						"in": "query",
						"description": "Sort resources by column",
						"required": false,
						"schema": {
							"type": "string",
							"default": "created_date"
						}
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "Sort resources by ascending or descending",
						"required": false,
						"schema": {
							"type": "string",
							"default": "D"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"members": {
											"type": "array",
											"items": {
												"properties": {
													"address_line1": {
														"type": "string"
													},
													"address_line2": {
														"type": "string"
													},
													"city": {
														"type": "string"
													},
													"country": {
														"type": "string"
													},
													"created_date": {
														"type": "string",
														"format": "date-time"
													},
													"degree": {
														"type": "string"
													},
													"dtg": {
														"type": "string"
													},
													"email": {
														"type": "string"
													},
													"first_name": {
														"type": "string"
													},
													"full_name": {
														"type": "string"
													},
													"gender": {
														"type": "string"
													},
													"home_phone": {
														"type": "string"
													},
													"introduction": {
														"type": "string"
													},
													"is_member_photo_available": {
														"type": "string"
													},
													"last_name": {
														"type": "string"
													},
													"member_id": {
														"type": "integer"
													},
													"mobile": {
														"type": "string"
													},
													"npi": {
														"type": "string"
													},
													"prefix": {
														"type": "string"
													},
													"specialization": {
														"type": "string"
													},
													"state": {
														"type": "string"
													},
													"zip_code": {
														"type": "string"
													},
													"zuid": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/agents/{agent_id}/availability": {
			"get": {
				"tags": ["Agents"],
				"description": "Check for agent availability",
				"parameters": [
					{
						"name": "agent_id",
						"in": "path",
						"description": "Filter resources by agent ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Filter resources by start date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "Filter resources by end date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "time_slot",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"availability": {
											"properties": {
												"available_slots": {
													"type": "array",
													"items": {
														"type": "string",
														"format": "date-time"
													}
												},
												"facility_id": {
													"type": "string"
												},
												"from_date": {
													"type": "string",
													"format": "date-time"
												},
												"member_id": {
													"type": "string"
												},
												"to_date": {
													"type": "string",
													"format": "date-time"
												},
												"working_days": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointment/discount": {
			"post": {
				"tags": ["Appointment Discount"],
				"summary": "Store Appointment Discount Data",
				"description": "Store appointment Discount data in database",
				"operationId": "Store",
				"requestBody": {
					"description": "Appointment Discount data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["patient_id", "appointment_id", "amount"],
								"properties": {
									"patient_id": {
										"type": "integer"
									},
									"appointment_id": {
										"type": "integer"
									},
									"discount_label": {
										"type": "string"
									},
									"amount": {
										"type": "float"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointment/{appointment_id}/prescription": {
			"post": {
				"tags": ["Appointments"],
				"summary": "Medicine",
				"description": "Appointments Prsecription detail",
				"operationId": "appointment_id",
				"parameters": [
					{
						"name": "appointment_id",
						"in": "path",
						"description": "appointment Id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "medicine_id[]",
						"in": "query",
						"description": "Array of medicine IDs",
						"required": true,
						"schema": {
							"type": "array",
							"items": {
								"type": "integer"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/sources/{id}": {
			"get": {
				"tags": ["Sources"],
				"summary": "Appointment source details",
				"description": "Get the source details by their ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Filter source by ID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"sources": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"title": {
														"type": "string"
													},
													"amount": {
														"type": "string"
													},
													"after_approval_amount": {
														"type": "string"
													},
													"funnel_url": {
														"type": "string",
														"format": "date-time"
													},
													"duration": {
														"type": "string"
													},
													"color": {
														"type": "string"
													},
													"standing_order": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"delay_days": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								},
								"example": {
									"code": 0,
									"message": "success",
									"data": {
										"id": "id",
										"title": "DietDoc",
										"amount": "10.00",
										"after_approval_amount": "10.00",
										"funnel_url": "https://www.dietdoc.com/start-now/",
										"duration": "10",
										"color": "#fff",
										"standing_order": "0",
										"type": "Sync/Async",
										"delay_days": "0"
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/clients/{id}/sources": {
			"get": {
				"tags": ["Sources"],
				"summary": "get clients active sources",
				"description": "get clients all active sources",
				"operationId": "683c655954394770158df545ec7b8f44",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "get clients all active sources",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"title": {
														"type": "string"
													},
													"amount": {
														"type": "string"
													},
													"after_approval_amount": {
														"type": "integer"
													},
													"status": {
														"type": "boolean"
													},
													"state_rule": {
														"type": "boolean"
													},
													"created_at": {
														"type": "string",
														"format": "date-time"
													},
													"updated_at": {
														"type": "string",
														"format": "date-time"
													},
													"funnel_url": {
														"type": "string"
													},
													"duration": {
														"type": "string"
													},
													"color": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"subtype": {
														"type": "string"
													},
													"standing_order": {
														"type": "integer"
													},
													"delay_days": {
														"type": "integer"
													},
													"post_visit_summary": {
														"type": "integer"
													},
													"related_to": {
														"type": "integer"
													},
													"appointment_mode": {
														"type": "integer"
													},
													"doc_upload_option": {
														"type": "integer"
													},
													"payment_method": {
														"type": "string"
													},
													"super_bill": {
														"type": "integer"
													},
													"sync_questionnare_id": {
														"type": "integer"
													},
													"async_questionnare_id": {
														"type": "integer"
													},
													"async_amount": {
														"type": "string"
													},
													"rpm_amount": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/searchPharmacy": {
			"get": {
				"tags": ["Pharmacy"],
				"summary": "Get Lab List",
				"description": "searchPharmacy.",
				"operationId": "4274e96d8507a1daa04106f5e2995a2e",
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"description": "Search Pharmacy",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"422": {
						"description": "Unprocessable Entity",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/verifyPatientFromIdology": {
			"post": {
				"tags": ["Idology"],
				"summary": "Verify patient details from Idology",
				"description": "Verify patient details from Idology",
				"operationId": "3a8b43432485e45856c8fcc428ebd9c6",
				"requestBody": {
					"description": "Patient's Data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["patient_id"],
								"properties": {
									"patient_id": {
										"description": "Id of patient",
										"type": "integer"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"response": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/getLabList/{client_id?}": {
			"get": {
				"tags": ["Git Lab List"],
				"summary": "Get Lab List",
				"description": "List the lab list according to client id.",
				"operationId": "1b8733425dd284ab2ae8106104762304",
				"parameters": [
					{
						"name": "client_id",
						"in": "path",
						"description": "Filter resources by client ID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "website",
						"in": "path",
						"description": "Filter resources by website",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"lab_test": {
											"properties": {
												"id": {
													"type": "integer"
												},
												"user_id": {
													"type": "integer"
												},
												"name": {
													"type": "string"
												},
												"soft_delete": {
													"type": "integer"
												},
												"selected": {
													"type": "string"
												},
												"lab_test": {
													"properties": {
														"id": {
															"type": "integer"
														},
														"user_id": {
															"type": "integer"
														},
														"website": {
															"type": "integer"
														},
														"lab_id": {
															"type": "integer"
														},
														"test_id": {
															"type": "integer"
														},
														"test_description": {
															"type": "string"
														},
														"price": {
															"type": "string"
														},
														"soft_delete": {
															"type": "integer"
														},
														"status": {
															"type": "integer"
														},
														"test": {
															"properties": {
																"id": {
																	"type": "integer"
																},
																"user_id": {
																	"type": "integer"
																},
																"name": {
																	"type": "string"
																},
																"code": {
																	"type": "string"
																},
																"soft_delete": {
																	"type": "integer"
																},
																"status": {
																	"type": "integer"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"422": {
						"description": "Unprocessable Entity",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/updateOrderDetails": {
			"put": {
				"tags": ["Update Order Details"],
				"summary": "Update LabOrder",
				"description": "Update Lab Order Detail data in database",
				"operationId": "updateOrderDetails",
				"requestBody": {
					"description": "LabOrder data",
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"properties": {
									"patient_id": {
										"type": "integer"
									},
									"amount": {
										"type": "integer"
									},
									"charge_id": {
										"type": "integer"
									},
									"token": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation"
					},
					"422": {
						"description": "Unprocessable Entity",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/leads": {
			"post": {
				"tags": ["Leads"],
				"summary": "Store leads",
				"description": "Store Lead data in database",
				"operationId": "store",
				"requestBody": {
					"description": "Lead data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["name"],
								"properties": {
									"name": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"phone_number": {
										"type": "string"
									},
									"zip_code": {
										"type": "string"
									},
									"referred_by": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"source": {
										"type": "string"
									},
									"source_id": {
										"type": "string"
									},
									"referral_code": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/addLeadAgentAppointment": {
			"post": {
				"tags": ["Leads"],
				"summary": "Store leads appointments",
				"description": "Store lead appointments data in database",
				"operationId": "addLeadAgentAppointment",
				"requestBody": {
					"description": "Lead Appointments data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"lead_id",
									"member_id",
									"reason",
									"start_date",
									"start_time"
								],
								"properties": {
									"lead_id": {
										"type": "integer"
									},
									"member_id": {
										"type": "integer"
									},
									"reason": {
										"type": "string"
									},
									"start_date": {
										"description": "start_date in PST",
										"type": "string",
										"format": "date"
									},
									"start_time": {
										"description": "start_time in PST",
										"type": "string"
									},
									"duration_in_minutes": {
										"type": "integer"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										},
										"appointment": {
											"properties": {
												"appointment_id": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/members": {
			"get": {
				"tags": ["Members"],
				"summary": "Member Listing",
				"description": "List all the members in database",
				"parameters": [
					{
						"name": "license_state",
						"in": "query",
						"description": "Filter resources by license state",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "medicine_check",
						"in": "query",
						"description": "Filter resources by medicine check",
						"required": false,
						"schema": {
							"type": "boolean",
							"default": "false"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Filter resources by page number",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "1"
						}
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Filter resources by total rows to show per page",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "10"
						}
					},
					{
						"name": "sort_column",
						"in": "query",
						"description": "Sort resources by column",
						"required": false,
						"schema": {
							"type": "string",
							"default": "created_date"
						}
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "Sort resources by ascending or descending",
						"required": false,
						"schema": {
							"type": "string",
							"default": "D"
						}
					},
					{
						"name": "source_id",
						"in": "query",
						"description": "Filter resources by source ID",
						"required": false,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"members": {
											"type": "array",
											"items": {
												"properties": {
													"address_line1": {
														"type": "string"
													},
													"address_line2": {
														"type": "string"
													},
													"city": {
														"type": "string"
													},
													"country": {
														"type": "string"
													},
													"created_date": {
														"type": "string",
														"format": "date-time"
													},
													"degree": {
														"type": "string"
													},
													"dtg": {
														"type": "string"
													},
													"email": {
														"type": "string"
													},
													"first_name": {
														"type": "string"
													},
													"full_name": {
														"type": "string"
													},
													"gender": {
														"type": "string"
													},
													"home_phone": {
														"type": "string"
													},
													"introduction": {
														"type": "string"
													},
													"is_member_photo_available": {
														"type": "string"
													},
													"last_name": {
														"type": "string"
													},
													"member_id": {
														"type": "integer"
													},
													"mobile": {
														"type": "string"
													},
													"npi": {
														"type": "string"
													},
													"prefix": {
														"type": "string"
													},
													"specialization": {
														"type": "string"
													},
													"state": {
														"type": "string"
													},
													"zip_code": {
														"type": "string"
													},
													"zuid": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/members/{member_id}/availability": {
			"get": {
				"tags": ["Members"],
				"description": "Check for member availability",
				"operationId": "b61a173065c90211aad7bdcea2b97a17",
				"parameters": [
					{
						"name": "member_id",
						"in": "path",
						"description": "Filter resources by member ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Filter resources by start date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "Filter resources by end date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "time_slot",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "timezone",
						"in": "query",
						"description": "The timezone parameter. Accepts either 'PST' or 'America/Phoenix' formats.",
						"required": false,
						"schema": {
							"type": "string",
							"format": "PST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"availability": {
											"properties": {
												"available_slots": {
													"type": "array",
													"items": {
														"type": "string",
														"format": "date-time"
													}
												},
												"facility_id": {
													"type": "string"
												},
												"from_date": {
													"type": "string",
													"format": "date-time"
												},
												"member_id": {
													"type": "string"
												},
												"to_date": {
													"type": "string",
													"format": "date-time"
												},
												"working_days": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/members/availableslots": {
			"get": {
				"tags": ["Members"],
				"description": "Check for member availability",
				"operationId": "c501e21ac0c67df0cc83df3211e7b3ce",
				"parameters": [
					{
						"name": "source_id",
						"in": "query",
						"description": "source id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "license_state",
						"in": "query",
						"description": "License state",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Filter resources by start date",
						"schema": {
							"type": "date",
							"format": "Y-m-d"
						}
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "Filter resources by end date",
						"schema": {
							"type": "date",
							"format": "Y-m-d"
						}
					},
					{
						"name": "time_slot",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "timezone",
						"in": "query",
						"description": "The timezone parameter. Accepts either 'PST' or 'America/Phoenix' formats.",
						"required": false,
						"schema": {
							"type": "string",
							"format": "PST"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"available_slots": {
											"properties": {
												"2023-11-20": {
													"type": "array",
													"items": {
														"properties": {
															"start_time": {
																"type": "string"
															},
															"end_time": {
																"type": "string"
															},
															"member_id": {
																"type": "string"
															}
														},
														"type": "object"
													}
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/members/{id}": {
			"get": {
				"tags": ["Members"],
				"summary": "Member detail",
				"description": "Member detail",
				"operationId": "d3ea21f92c129bdb7a3750e8b1d97460",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "get member detail",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"full_name": {
														"type": "string"
													},
													"first_name": {
														"type": "string"
													},
													"last_name": {
														"type": "string"
													},
													"email": {
														"type": "string"
													},
													"avatar": {
														"type": "string"
													},
													"phone_number": {
														"type": "integer"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Member Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointments": {
			"get": {
				"tags": ["Appointments"],
				"summary": "Appointments Listing",
				"description": "List all patient appointments",
				"operationId": "e2ac86d1d09b45f2805905296fa6c6ff",
				"parameters": [
					{
						"name": "start_date",
						"in": "query",
						"description": "Filter resources by end date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "end_date",
						"in": "query",
						"description": "Filter resources by end date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date"
						}
					},
					{
						"name": "status_type",
						"in": "query",
						"description": "Filter resources by status type",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"patients": {
											"type": "array",
											"items": {
												"properties": {
													"appointment_mode": {
														"type": "string"
													},
													"category": {
														"type": "string"
													},
													"created_at": {
														"type": "string",
														"format": "date-time"
													},
													"date_preference": {
														"type": "string"
													},
													"date_type": {
														"type": "string",
														"format": "date"
													},
													"doctor_id": {
														"type": "integer"
													},
													"duration": {
														"type": "integer"
													},
													"end_at": {
														"type": "string",
														"format": "date-time"
													},
													"end_date": {
														"type": "string",
														"format": "date"
													},
													"end_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"facility": {
														"type": "string"
													},
													"frequency": {
														"type": "integer"
													},
													"from_date": {
														"type": "string"
													},
													"from_time": {
														"type": "string"
													},
													"from_time_period": {
														"type": "string"
													},
													"id": {
														"type": "integer"
													},
													"message_to_patient": {
														"type": "string"
													},
													"original_datetime_tz": {
														"type": "string"
													},
													"patient_id": {
														"type": "integer"
													},
													"pharmacy_id": {
														"type": "string"
													},
													"reason": {
														"type": "string"
													},
													"reason_for_cancellation": {
														"type": "string"
													},
													"scheduled_by": {
														"type": "string"
													},
													"source_id": {
														"type": "integer"
													},
													"specific_date_option_1": {
														"type": "string"
													},
													"specific_date_option_2": {
														"type": "string"
													},
													"specific_date_option_3": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"start_at": {
														"type": "string",
														"format": "date-time"
													},
													"start_date": {
														"type": "string",
														"format": "date"
													},
													"start_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"start_time": {
														"type": "string"
													},
													"start_time_period": {
														"type": "string"
													},
													"status_type": {
														"type": "string"
													},
													"time_preference": {
														"type": "string"
													},
													"to_date": {
														"type": "string"
													},
													"to_time": {
														"type": "string"
													},
													"to_time_period": {
														"type": "string"
													},
													"updated_at": {
														"type": "string",
														"format": "date-time"
													},
													"visit_type": {
														"type": "string"
													},
													"zoom_link": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			},
			"post": {
				"tags": ["Appointments"],
				"summary": "Store appointments",
				"description": "Store appointments data in database",
				"operationId": "appointmentStore",
				"requestBody": {
					"description": "Appointments data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["member_id", "patient_id", "mode", "repetition"],
								"properties": {
									"duration_in_minutes": {
										"type": "integer"
									},
									"frequency": {
										"type": "string"
									},
									"member_id": {
										"type": "integer"
									},
									"message_to_patient": {
										"type": "string"
									},
									"mode": {
										"type": "string"
									},
									"patient_id": {
										"type": "integer"
									},
									"reason": {
										"type": "string"
									},
									"repetition": {
										"type": "string"
									},
									"start_date": {
										"description": "start_date in PST",
										"type": "string",
										"format": "date"
									},
									"start_time": {
										"description": "start_time in PST",
										"type": "string"
									},
									"source_id": {
										"type": "integer"
									},
									"visit_type_id": {
										"type": "integer"
									},
									"timezone": {
										"description": "PST",
										"type": "string"
									},
									"start_time_period": {
										"description": "start_time_period in PST",
										"type": "string"
									},
									"video_link": {
										"type": "string"
									},
									"consultation_fee": {
										"type": "string"
									},
									"coupon_code": {
										"type": "string"
									},
									"coupon_type": {
										"type": "string"
									},
									"coupon_value": {
										"type": "integer"
									},
									"subscription_plan_id": {
										"type": "integer"
									},
									"visitor_id": {
										"type": "integer"
									},
									"visit_id": {
										"type": "integer"
									},
									"referral_code": {
										"type": "string"
									},
									"patient_state": {
										"type": "string"
									},
									"is_upgrade": {
										"type": "boolean"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										},
										"appointment": {
											"properties": {
												"appointment_id": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointments/status/{patient_id}/{appointment_id}": {
			"get": {
				"tags": ["Appointments"],
				"summary": "Appointments Status",
				"description": "Get patient appointment status",
				"parameters": [
					{
						"name": "patient_id",
						"in": "path",
						"description": "Filter resources by patient ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "appointment_id",
						"in": "path",
						"description": "Filter resources by appointment ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"appointment_status": {
											"properties": {
												"status": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointments/cancel/{appointment_id}": {
			"post": {
				"tags": ["Appointments"],
				"summary": "Cancel Appointment",
				"description": "Cancel patient specific appointment",
				"operationId": "appointmentCancel",
				"parameters": [
					{
						"name": "appointment_id",
						"in": "path",
						"description": "Filter resources by appointment ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Appointments data",
					"content": {
						"application/json": {
							"schema": {
								"required": ["patient_id", "reason_for_cancellation"],
								"properties": {
									"patient_id": {
										"type": "integer"
									},
									"reason_for_cancellation": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointments/reschedule/{appointment_id}": {
			"post": {
				"tags": ["Appointments"],
				"summary": "Appointment Rescheduling",
				"description": "Reschedule the appointment",
				"parameters": [
					{
						"name": "appointment_id",
						"in": "path",
						"description": "Filter resources by appointment ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"requestBody": {
					"description": "Appointments reschedule data",
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"patient_id",
									"doctor_id",
									"source_id",
									"reason",
									"appointment_mode",
									"category",
									"status_type",
									"start_date"
								],
								"properties": {
									"patient_id": {
										"type": "integer"
									},
									"doctor_id": {
										"type": "integer"
									},
									"source_id": {
										"type": "integer"
									},
									"reason": {
										"type": "string"
									},
									"appointment_mode": {
										"type": "string"
									},
									"category": {
										"type": "string"
									},
									"status_type": {
										"type": "string",
										"example": "sync / async"
									},
									"start_date": {
										"type": "string",
										"example": "YYYY-MM-DD"
									},
									"start_time": {
										"type": "string",
										"example": "HH:MM"
									},
									"start_time_period": {
										"type": "string",
										"example": "AM"
									},
									"timezone": {
										"type": "string",
										"example": "America/Los_Angeles"
									},
									"visitor_id": {
										"type": "integer"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"status": {
											"type": "string"
										},
										"message": {
											"type": "string"
										},
										"appointment": {
											"properties": {
												"appointment_id": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"422": {
						"description": "Unprocessable Entity"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/getAppointmentDetail": {
			"get": {
				"tags": ["Appointments"],
				"summary": "Appointments Detail",
				"description": "Get patient appointments status and pdf path",
				"operationId": "22a1d129aa128a67225ab49770e1f100",
				"parameters": [
					{
						"name": "appointment_id",
						"in": "query",
						"description": "Filter resources by appointment_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "source_id",
						"in": "query",
						"description": "Filter resources by source_id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"status": {
											"type": "string"
										},
										"appointment_status": {
											"type": "string"
										},
										"pdf_path": {
											"type": "string"
										},
										"encounter_data": {
											"type": "mixed"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/holdAppointmentSlot": {
			"post": {
				"tags": ["Appointments"],
				"summary": "hold Appointment Slot",
				"description": "Hold appointment slot data in database",
				"operationId": "holdAppointmentSlot",
				"requestBody": {
					"description": "Appointments data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"member_id",
									"start_time",
									"start_date",
									"duration_in_minutes"
								],
								"properties": {
									"member_id": {
										"type": "string"
									},
									"start_time": {
										"type": "string"
									},
									"start_date": {
										"type": "string"
									},
									"duration_in_minutes": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										},
										"appointment": {
											"properties": {
												"appointment_id": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/getPatientLastAppointmentMode": {
			"get": {
				"tags": ["Appointments"],
				"summary": "Get Appointment Mode",
				"description": "Get Patient Last Appointment Mode",
				"operationId": "4ee28f2af95dfb65a434473d303933a1",
				"parameters": [
					{
						"name": "patient_id",
						"in": "query",
						"description": "Filter resources by patient ID (Record id)",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "source_id",
						"in": "query",
						"description": "Filter resources by template ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										},
										"appointment_mode": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients/{patient_id}/appointments": {
			"get": {
				"tags": ["Patients"],
				"description": "Get patient appoinments",
				"operationId": "91d26484898bc6cb9394b6770557a70e",
				"parameters": [
					{
						"name": "patient_id",
						"in": "path",
						"description": "Patient Id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "type",
						"in": "query",
						"description": "The status of the pet.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": ["cancelled", "completed", "upcoming"]
						}
					},
					{
						"name": "from_date",
						"in": "query",
						"description": "Filter resources by start date",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "to_date",
						"in": "query",
						"description": "Filter resources by end date",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"appointments": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"patient_id": {
														"type": "integer"
													},
													"doctor_id": {
														"type": "integer"
													},
													"source_id": {
														"type": "integer"
													},
													"pharmacy_id": {
														"type": "integer"
													},
													"order_id": {
														"type": "integer"
													},
													"created_by": {
														"type": "string",
														"format": "date-time"
													},
													"status": {
														"type": "string"
													},
													"no_show_by": {
														"type": "string"
													},
													"visit_type": {
														"type": "string"
													},
													"appointment_mode": {
														"type": "string"
													},
													"date_type": {
														"type": "string"
													},
													"start_date": {
														"type": "string",
														"format": "date"
													},
													"original_datetime_tz": {
														"type": "string"
													},
													"start_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"end_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"end_date": {
														"type": "string",
														"format": "date"
													},
													"frequency": {
														"type": "string"
													},
													"start_time": {
														"type": "string",
														"format": "time"
													},
													"duration": {
														"type": "integer"
													},
													"reason": {
														"type": "string"
													},
													"reason_to_reschedule": {
														"type": "string"
													},
													"message_to_patient": {
														"type": "string"
													},
													"created_at": {
														"format": "date-time"
													},
													"updated_at": {
														"format": "date-time"
													},
													"start_time_period": {
														"format": "date-time"
													},
													"time_preference": {
														"type": "string"
													},
													"date_preference": {
														"type": "string"
													},
													"specific_date_option_1": {
														"format": "date"
													},
													"specific_date_option_2": {
														"format": "date"
													},
													"specific_date_option_3": {
														"format": "date"
													},
													"from_date": {
														"format": "date"
													},
													"to_date": {
														"format": "date"
													},
													"to_time_period": {
														"type": "string"
													},
													"reason_for_cancellation": {
														"type": "string"
													},
													"status_type": {
														"type": "string"
													},
													"zoom_link": {
														"type": "string"
													},
													"test": {
														"type": "string"
													},
													"tenant_id": {
														"type": "integer"
													},
													"zoom_response": {
														"type": "string"
													},
													"rx_tracker_status": {
														"type": "string"
													},
													"timezone": {
														"type": "string"
													},
													"override_reason": {
														"type": "string"
													},
													"appointment_id": {
														"type": "integer"
													},
													"patient_state": {
														"type": "string"
													},
													"coupon_code": {
														"type": "string"
													},
													"amount": {
														"type": "string"
													},
													"subscription_id": {
														"type": "integer"
													},
													"by_callback_lab_result": {
														"type": "string"
													},
													"callback_order_id": {
														"type": "integer"
													},
													"selected_erx_ids": {
														"type": "integer"
													},
													"selected_erx_data": {
														"type": "string"
													},
													"google_event_id": {
														"type": "integer"
													},
													"care_coordinator": {
														"type": "string"
													},
													"start_at": {
														"type": "string",
														"format": "date-time"
													},
													"end_at": {
														"type": "string",
														"format": "date-time"
													},
													"parsed_start_time": {
														"type": "string",
														"format": "time"
													},
													"zoom_join_copy_link": {
														"type": "string",
														"format": "time"
													},
													"parsed_start_date": {
														"type": "string",
														"format": "date"
													},
													"parsed_start_period": {
														"type": "string"
													},
													"member_name": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"service_title": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/appointment/{appointment_id}": {
			"get": {
				"tags": ["Appointments"],
				"summary": "Appointment show",
				"description": "appointment show",
				"operationId": "192f9f2fe9a2f9fe211a7839406781ac",
				"parameters": [
					{
						"name": "appointment_id",
						"in": "path",
						"description": "Show appointment by appointment id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"patients": {
											"type": "array",
											"items": {
												"properties": {
													"appointment_mode": {
														"type": "string"
													},
													"category": {
														"type": "string"
													},
													"created_at": {
														"type": "string",
														"format": "date-time"
													},
													"date_preference": {
														"type": "string"
													},
													"date_type": {
														"type": "string",
														"format": "date"
													},
													"doctor_id": {
														"type": "integer"
													},
													"duration": {
														"type": "integer"
													},
													"end_at": {
														"type": "string",
														"format": "date-time"
													},
													"end_date": {
														"type": "string",
														"format": "date"
													},
													"end_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"facility": {
														"type": "string"
													},
													"frequency": {
														"type": "integer"
													},
													"from_date": {
														"type": "string"
													},
													"from_time": {
														"type": "string"
													},
													"from_time_period": {
														"type": "string"
													},
													"id": {
														"type": "integer"
													},
													"message_to_patient": {
														"type": "string"
													},
													"original_datetime_tz": {
														"type": "string"
													},
													"patient_id": {
														"type": "integer"
													},
													"pharmacy_id": {
														"type": "string"
													},
													"reason": {
														"type": "string"
													},
													"reason_for_cancellation": {
														"type": "string"
													},
													"scheduled_by": {
														"type": "string"
													},
													"source_id": {
														"type": "integer"
													},
													"specific_date_option_1": {
														"type": "string"
													},
													"specific_date_option_2": {
														"type": "string"
													},
													"specific_date_option_3": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"start_at": {
														"type": "string",
														"format": "date-time"
													},
													"start_date": {
														"type": "string",
														"format": "date"
													},
													"start_date_time": {
														"type": "string",
														"format": "date-time"
													},
													"start_time": {
														"type": "string"
													},
													"start_time_period": {
														"type": "string"
													},
													"status_type": {
														"type": "string"
													},
													"time_preference": {
														"type": "string"
													},
													"to_date": {
														"type": "string"
													},
													"to_time": {
														"type": "string"
													},
													"to_time_period": {
														"type": "string"
													},
													"updated_at": {
														"type": "string",
														"format": "date-time"
													},
													"visit_type": {
														"type": "string"
													},
													"zoom_link": {
														"type": "string"
													},
													"member_name": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"member_picture": {
														"type": "string",
														"format": "url"
													},
													"service_title": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patient Listing",
				"description": "List all the patients in database",
				"parameters": [
					{
						"name": "facility_id",
						"in": "query",
						"description": "Filter resource by facility ID",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "record_id",
						"in": "query",
						"description": "Filter resources by record ID",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"members": {
											"type": "array",
											"items": {
												"properties": {
													"active": {
														"type": "string"
													},
													"city": {
														"type": "string"
													},
													"created_date": {
														"type": "string",
														"format": "date-time"
													},
													"created_time": {
														"type": "string",
														"format": "time"
													},
													"dob": {
														"type": "string",
														"format": "date"
													},
													"email": {
														"type": "string"
													},
													"first_name": {
														"type": "string"
													},
													"full_name": {
														"type": "string"
													},
													"gender": {
														"type": "string"
													},
													"last_name": {
														"type": "string"
													},
													"mobile": {
														"type": "string"
													},
													"patient_id": {
														"type": "string"
													},
													"record_id": {
														"type": "string"
													},
													"state": {
														"type": "string"
													},
													"zip_code": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			},
			"post": {
				"tags": ["Patients"],
				"summary": "Create patient",
				"description": "Store patients data in database",
				"operationId": "patientStore",
				"requestBody": {
					"description": "Patients data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["email", "first_name", "last_name", "dob", "gender"],
								"properties": {
									"first_name": {
										"type": "string"
									},
									"last_name": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"dob": {
										"type": "string"
									},
									"gender": {
										"type": "string"
									},
									"mobile": {
										"type": "string"
									},
									"address_line1": {
										"type": "string"
									},
									"address_line2": {
										"type": "string"
									},
									"postal_code": {
										"type": "string"
									},
									"city": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"create_contact_on[]": {
										"type": "string"
									},
									"welcome_email": {
										"type": "boolean"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients/{patient_id}": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients detail",
				"description": "Get the patient details by their ID",
				"parameters": [
					{
						"name": "patient_id",
						"in": "path",
						"description": "Filter resources by patient ID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"address_line1": {
													"type": "string"
												},
												"address_line2": {
													"type": "string"
												},
												"blood_group": {
													"type": "string"
												},
												"city": {
													"type": "string"
												},
												"communication_type": {
													"type": "string"
												},
												"country": {
													"type": "string"
												},
												"district": {
													"type": "string"
												},
												"dob": {
													"type": "string",
													"format": "date"
												},
												"email": {
													"type": "string"
												},
												"employment_status": {
													"type": "string"
												},
												"first_name": {
													"type": "string"
												},
												"gender": {
													"type": "string"
												},
												"identifier": {
													"properties": {
														"use": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"last_name": {
													"type": "string"
												},
												"mobile": {
													"type": "string"
												},
												"marital_status": {
													"type": "string"
												},
												"postal_code": {
													"type": "string"
												},
												"profile_img": {
													"type": "string"
												},
												"record_id": {
													"type": "string"
												},
												"smoking_status": {
													"type": "string"
												},
												"state": {
													"type": "string"
												},
												"status": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object",
									"example": {
										"code": 0,
										"message": "success",
										"data": {
											"address_line1": "Some patients street",
											"address_line2": null,
											"blood_group": null,
											"city": "San Fransisco",
											"communication_type": null,
											"country": "US",
											"district": null,
											"dob": "1970-01-01",
											"email": "example@email.com",
											"employment_status": "",
											"first_name": "John",
											"gender": "male",
											"height": "6",
											"weigh": "230",
											"identifier": {
												"use": "usual",
												"value": "1"
											},
											"last_name": "Doe",
											"mobile": "+1234567890",
											"marital_status": "",
											"postal_code": "90001",
											"profile_img": "",
											"record_id": "PAT000001",
											"smoking_status": "",
											"state": "California",
											"status": "active"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients/{record_id}": {
			"put": {
				"tags": ["Patients"],
				"summary": "Update patient",
				"description": "Update patient data in database",
				"operationId": "patientUpdate",
				"parameters": [
					{
						"name": "record_id",
						"in": "path",
						"description": "Filter resources by patient record ID",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "PATXXXXX"
					}
				],
				"requestBody": {
					"description": "Patients data",
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"required": ["email", "first_name", "last_name"],
								"properties": {
									"dob": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"first_name": {
										"type": "string"
									},
									"last_name": {
										"type": "string"
									},
									"gender": {
										"type": "string"
									},
									"mobile": {
										"type": "string"
									},
									"address": {
										"properties": {
											"address_line1": {
												"type": "string"
											},
											"address_line2": {
												"type": "string"
											},
											"city": {
												"type": "string"
											},
											"state": {
												"type": "string"
											},
											"zip_code": {
												"type": "string"
											}
										},
										"type": "object"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"400": {
						"description": "Bad Request"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients/search": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients search",
				"description": "Search and get the patient details by their email and date of birth",
				"requestBody": {
					"description": "Patients email and dob",
					"content": {
						"application/json": {
							"schema": {
								"required": ["email", "dob"],
								"properties": {
									"email": {
										"type": "string",
										"example": "example@mail.com"
									},
									"dob": {
										"type": "string",
										"example": "MM-DD-YYYY"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"address_line1": {
													"type": "string"
												},
												"address_line2": {
													"type": "string"
												},
												"blood_group": {
													"type": "string"
												},
												"city": {
													"type": "string"
												},
												"communication_type": {
													"type": "string"
												},
												"country": {
													"type": "string"
												},
												"district": {
													"type": "string"
												},
												"dob": {
													"type": "string",
													"format": "date"
												},
												"email": {
													"type": "string"
												},
												"employment_status": {
													"type": "string"
												},
												"first_name": {
													"type": "string"
												},
												"gender": {
													"type": "string"
												},
												"identifier": {
													"properties": {
														"use": {
															"type": "string"
														},
														"value": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"last_name": {
													"type": "string"
												},
												"mobile": {
													"type": "string"
												},
												"marital_status": {
													"type": "string"
												},
												"postal_code": {
													"type": "string"
												},
												"profile_img": {
													"type": "string"
												},
												"record_id": {
													"type": "string"
												},
												"smoking_status": {
													"type": "string"
												},
												"state": {
													"type": "string"
												},
												"status": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object",
									"example": {
										"code": 0,
										"message": "success",
										"data": {
											"address_line1": "Some patients street",
											"address_line2": null,
											"blood_group": null,
											"city": "San Fransisco",
											"communication_type": null,
											"country": "US",
											"district": null,
											"dob": "1970-01-01",
											"email": "example@email.com",
											"employment_status": "",
											"first_name": "John",
											"gender": "male",
											"height": "6",
											"weigh": "230",
											"identifier": {
												"use": "usual",
												"value": "1"
											},
											"last_name": "Doe",
											"mobile": "+1234567890",
											"marital_status": "",
											"postal_code": "90001",
											"profile_img": "",
											"record_id": "PAT000001",
											"smoking_status": "",
											"state": "California",
											"status": "active"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/getBraintreeToken": {
			"get": {
				"tags": ["Braintree"],
				"summary": "get Braintree token for payments",
				"description": "get Braintree token for payments",
				"parameters": [
					{
						"name": "source_id",
						"in": "query",
						"required": false,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "boolean",
											"example": "0"
										},
										"token": {
											"example": "eyJ2ZXJzaW9uIjoyLCJhdXRob3JpemF0aW9uRmluZ2VycHJpbnQiOiJleUowZVhBaU9pSktWMVFpTENKaGJHY2lPaUpGVXpJMU5pSXNJbXRwWkNJNklqSXdNVGd3TkRJMk1UWX"
										},
										"message": {
											"type": "string",
											"example": "success"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/initiatePayment": {
			"post": {
				"tags": ["Payment"],
				"summary": "Initiate Payment",
				"description": "Initiates a payment for a patient using Braintree.",
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"patient_id": {
										"description": "The ID of the patient.",
										"type": "integer",
										"example": 123
									},
									"nonce": {
										"description": "The payment nonce.",
										"type": "string",
										"example": "fake-valid-nonce"
									},
									"amount": {
										"description": "The payment amount.",
										"type": "number",
										"example": 50
									},
									"order_id": {
										"description": "The ID of the order (optional).",
										"type": "string",
										"example": "ABC123"
									},
									"channel": {
										"description": "channel (optional).",
										"type": "string",
										"example": "Test"
									},
									"qb_channel": {
										"description": "channel (optional).",
										"type": "string",
										"example": "Test"
									},
									"memberId": {
										"description": "memberId (optional).",
										"type": "string",
										"example": "29"
									},
									"source_id": {
										"description": "source_id (optional).",
										"type": "string",
										"example": "21"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer",
											"example": 0
										},
										"message": {
											"type": "string",
											"example": "success"
										},
										"data": {
											"properties": {
												"transaction_id": {
													"type": "string",
													"example": "txn123"
												},
												"payment_status": {
													"type": "string",
													"example": "success"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer",
											"example": 1
										},
										"message": {
											"type": "string",
											"example": "failed"
										},
										"reason": {
											"properties": {
												"patient_id": {
													"type": "array",
													"items": {
														"type": "string",
														"example": "The patient_id field is required."
													}
												},
												"nonce": {
													"type": "array",
													"items": {
														"type": "string",
														"example": "The nonce field is required."
													}
												},
												"amount": {
													"type": "array",
													"items": {
														"type": "string",
														"example": "The amount field is required."
													}
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer",
											"example": 1
										},
										"message": {
											"type": "string",
											"example": "Something went wrong."
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					}
				}
			}
		},
		"/searchPatientsAccessible": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients search",
				"description": "Search and get the patient details by their name,record_idand email",
				"requestBody": {
					"description": "Search and get the patient details by their name,record_idand email",
					"content": {
						"application/json": {
							"schema": {
								"required": ["search_input"],
								"properties": {
									"search_input": {
										"type": "string",
										"example": "patentname"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"patents": {
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/storeCardDetailsOfPatientOnBraintree": {
			"post": {
				"tags": ["Braintree"],
				"summary": "Braintree store card",
				"description": "Braintree store card",
				"requestBody": {
					"description": "Braintree store card",
					"content": {
						"application/json": {
							"schema": {
								"required": ["patient_id", "nonce"],
								"properties": {
									"patient_id": {
										"type": "string",
										"example": "1236"
									},
									"nonce": {
										"type": "string",
										"example": "fake-valid-nonce"
									},
									"source_id": {
										"type": "integer",
										"example": "123"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"status": {
											"type": "string"
										},
										"braintree_nonce": {},
										"braintree_customer_id": {},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patientByRecordIdAndEmail": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients search by record_id and email",
				"description": "Search and get the patient details by their email and record_id",
				"operationId": "9063207f3d43bf1eb8633dcf78659b4d",
				"parameters": [
					{
						"name": "record_id",
						"in": "query",
						"description": "Record ID of the patient",
						"required": true,
						"schema": {
							"type": "string",
							"example": "PAT111111111"
						}
					},
					{
						"name": "email",
						"in": "query",
						"description": "Email of the patient",
						"required": true,
						"schema": {
							"type": "string",
							"format": "email",
							"example": "example@mail.com"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"address_line1": {
													"type": "string"
												},
												"address_line2": {
													"nullable": true,
													"type": "string"
												},
												"blood_group": {
													"nullable": true,
													"type": "string"
												},
												"city": {
													"type": "string"
												},
												"communication_type": {
													"nullable": true,
													"type": "string"
												},
												"country": {
													"type": "string"
												},
												"district": {
													"nullable": true,
													"type": "string"
												},
												"dob": {
													"type": "string",
													"format": "date"
												},
												"email": {
													"type": "string"
												},
												"employment_status": {
													"nullable": true,
													"type": "string"
												},
												"first_name": {
													"type": "string"
												},
												"gender": {
													"type": "string"
												},
												"height": {
													"nullable": true,
													"type": "string"
												},
												"identifier": {
													"properties": {
														"use": {
															"type": "string"
														},
														"value": {
															"type": "string"
														}
													},
													"type": "object"
												},
												"last_name": {
													"type": "string"
												},
												"mobile": {
													"type": "string"
												},
												"marital_status": {
													"nullable": true,
													"type": "string"
												},
												"postal_code": {
													"type": "string"
												},
												"profile_img": {
													"nullable": true,
													"type": "string"
												},
												"record_id": {
													"type": "string"
												},
												"smoking_status": {
													"nullable": true,
													"type": "string"
												},
												"state": {
													"type": "string"
												},
												"status": {
													"type": "string"
												},
												"weight": {
													"nullable": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object",
									"example": {
										"code": 0,
										"message": "success",
										"data": {
											"address_line1": "Some patients street",
											"address_line2": null,
											"blood_group": null,
											"city": "San Francisco",
											"communication_type": null,
											"country": "US",
											"district": null,
											"dob": "1970-01-01",
											"email": "example@email.com",
											"employment_status": "",
											"first_name": "John",
											"gender": "male",
											"height": "6",
											"identifier": {
												"use": "usual",
												"value": "1"
											},
											"last_name": "Doe",
											"mobile": "+1234567890",
											"marital_status": "",
											"postal_code": "90001",
											"profile_img": "",
											"record_id": "PAT000001",
											"smoking_status": "",
											"state": "California",
											"status": "active",
											"weight": "230"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients/{patient_id}/questionnaires": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients answer",
				"description": "Get patient's questionnaires",
				"parameters": [
					{
						"name": "patient_id",
						"in": "path",
						"description": "Filter resources by patient ID",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Filter resources per page",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Filter resources by page",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "questionnaire_name_startswith",
						"in": "query",
						"description": "Filter resources by questionnaire name that starts with letter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "questionnaire_name_contains",
						"in": "query",
						"description": "Filter resources by questionnaire name that contains with letter",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"patient_questionnaires": {
											"type": "array",
											"items": {
												"properties": {
													"ques_map_id": {
														"type": "integer"
													},
													"questionnaire_id": {
														"type": "integer"
													},
													"questionnaire_name": {
														"type": "string"
													},
													"is_submitted": {
														"type": "boolean"
													},
													"is_saved": {
														"type": "boolean"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"search_criteria": {
													"properties": {
														"column_name": {
															"type": "string"
														},
														"search_text": {
															"type": "string"
														},
														"comparator": {
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/questionnaire/answers": {
			"post": {
				"tags": ["Questionnaires"],
				"summary": "Store questionnaires answers",
				"description": "Store questionnaires answer data in database",
				"operationId": "questionnaireStore",
				"requestBody": {
					"description": "Questionnaires data",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"template_id",
									"patient_id",
									"is_submitted",
									"answers"
								],
								"properties": {
									"template_id": {
										"type": "string"
									},
									"patient_id": {
										"type": "string"
									},
									"ques_map_id": {
										"type": "string"
									},
									"is_submitted": {
										"type": "boolean"
									},
									"answers": {
										"type": "array",
										"items": {
											"properties": {
												"entry_id": {
													"type": "string"
												},
												"answer": {
													"type": "string"
												},
												"multiple_answers": {
													"type": "array",
													"items": {
														"properties": {
															"answer": {
																"type": "string"
															}
														},
														"type": "object"
													}
												}
											},
											"type": "object"
										}
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										},
										"questionnaire_details": {
											"properties": {
												"ques_map_id": {
													"type": "integer"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patient-questionnaire-answer": {
			"get": {
				"tags": ["Patients"],
				"summary": "Patients questionnaire answer",
				"description": "Get patient questionnaires answers",
				"parameters": [
					{
						"name": "patient_id",
						"in": "query",
						"description": "Filter resources by patient ID (Record id)",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "template_id",
						"in": "query",
						"description": "Filter resources by template ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"questionnaires": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"template_id": {
														"type": "integer"
													},
													"answers": {
														"type": "array",
														"items": {
															"properties": {
																"question": {
																	"type": "string"
																},
																"answer": {
																	"type": "string"
																}
															},
															"type": "object"
														}
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/patients-upload-lab-report-documents": {
			"post": {
				"tags": ["Upload Patient Lab Reports"],
				"summary": "Store Patient Lab Reports",
				"description": "Store Patient Lab Reports into S3 and store in kulbersh order table",
				"operationId": "storeLabReportDocuments",
				"requestBody": {
					"description": "Store Patient Lab Reports data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["source_id", "patient_id", "report_files[]"],
								"properties": {
									"source_id": {
										"type": "integer"
									},
									"patient_id": {
										"type": "integer"
									},
									"json_response": {
										"type": "json"
									},
									"report_files[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									}
								},
								"type": "object"
							}
						},
						"application/json": {
							"schema": {}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/provider-signup": {
			"post": {
				"tags": ["Providers"],
				"summary": "Sign Up",
				"description": "Register the provider",
				"operationId": "authLogin",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": [
									"first_name",
									"last_name",
									"date_of_birth",
									"city",
									"state",
									"country",
									"email",
									"password",
									"password_confirmation",
									"phone_number",
									"gender",
									"zip_code",
									"address"
								],
								"properties": {
									"first_name": {
										"type": "string"
									},
									"last_name": {
										"type": "string"
									},
									"date_of_birth": {
										"type": "string"
									},
									"city": {
										"type": "string"
									},
									"zip_code": {
										"type": "string"
									},
									"state": {
										"type": "string"
									},
									"country": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"password_confirmation": {
										"type": "string"
									},
									"phone_number": {
										"type": "string"
									},
									"address": {
										"type": "string"
									},
									"gender": {
										"type": "string",
										"enum": ["Male", "Female"]
									},
									"license_type": {
										"type": "string",
										"enum": ["MD", "DO", "PA", "NP", "RN"]
									},
									"birth_place": {
										"type": "string"
									},
									"social_security_number": {
										"type": "string"
									},
									"practice_experience": {
										"type": "string"
									},
									"board_certified": {
										"type": "string"
									},
									"certifying_board": {
										"type": "string"
									},
									"npi_number": {
										"type": "string"
									},
									"taxonomy": {
										"type": "string"
									},
									"caqh_number": {
										"type": "string"
									},
									"medicare_patn": {
										"type": "string"
									},
									"medicaid_number": {
										"type": "string"
									},
									"malpractice_history": {
										"type": "string"
									},
									"hours_availabilty": {
										"type": "string"
									},
									"current_cv": {
										"type": "file"
									},
									"medical_degree[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"training_certificate[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"board_certificate[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"driver_license[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"medical_license[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"substance_certificate[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"certificate_insurance[]": {
										"type": "array",
										"items": {
											"type": "string",
											"format": "binary"
										}
									},
									"specialist": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"Anesthesiology",
												"Urology",
												"Allergy and immunology",
												"Dermatology"
											]
										}
									},
									"sub_specialist": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"Anesthesiology",
												"Urology",
												"Allergy and immunology",
												"Dermatology"
											]
										}
									},
									"active_dea_substance_certificate": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"California",
												"Arizona",
												"Michigan",
												"Minnesota"
											]
										}
									},
									"active_state_medical_licenses": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [
												"Alaska",
												"American Samoa",
												"Arizona",
												"Colorado"
											]
										}
									},
									"available_days": {
										"type": "array",
										"items": {
											"type": "string",
											"enum": [1, 2, 3, 4, 5, 6, 7]
										}
									}
								},
								"type": "object"
							}
						},
						"application/json": {
							"schema": {}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Successfully registered",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"200": {
						"description": "Successfully registered",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Unprocessable Entity",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"400": {
						"description": "Bad request"
					},
					"404": {
						"description": "Resource Not Found"
					}
				}
			}
		},
		"/provider/slot-status": {
			"get": {
				"tags": ["Providers"],
				"description": "Check provider slot availability",
				"operationId": "76ddee5fc616bdde533ed3962ff14b4d",
				"parameters": [
					{
						"name": "doctor_id",
						"in": "query",
						"description": "Filter resources by provider ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "start_date",
						"in": "query",
						"description": "Filter resources by date",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "start_time",
						"in": "query",
						"description": "Filter resources by start time",
						"required": true,
						"schema": {
							"type": "string",
							"format": "time"
						}
					},
					{
						"name": "end_time",
						"in": "query",
						"description": "Filter resources by end time",
						"required": true,
						"schema": {
							"type": "string",
							"format": "time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/sendEmailNotification": {
			"post": {
				"tags": ["Email Notifications"],
				"summary": "Send Email Notifications",
				"description": "Send Email Notifications",
				"operationId": "82ac40c88fd6542502ca6a72dab67747",
				"requestBody": {
					"description": "json",
					"content": {
						"application/json": {
							"schema": {
								"required": ["data", "template_alias", "to"],
								"properties": {
									"data": {
										"description": "array of data to be used in email",
										"type": "json"
									},
									"template_alias": {
										"description": "Email template to be used.",
										"type": "string"
									},
									"to": {
										"description": "Email to send to",
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/services": {
			"get": {
				"tags": ["Services"],
				"summary": "Services listing",
				"description": "Get list of all services",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "Filter resources by id",
						"required": false,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "Filter resources by page number",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "1"
						}
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Filter resources by total rows to show per page",
						"required": false,
						"schema": {
							"type": "integer",
							"default": "10"
						}
					},
					{
						"name": "search",
						"in": "query",
						"description": "Search resources by keyword",
						"required": false,
						"schema": {
							"type": "string",
							"default": ""
						}
					},
					{
						"name": "sort_column",
						"in": "query",
						"description": "Sort resources by column",
						"required": false,
						"schema": {
							"type": "string",
							"default": "created_date"
						}
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "Sort resources by ascending or descending",
						"required": false,
						"schema": {
							"type": "string",
							"default": "D"
						}
					},
					{
						"name": "type",
						"in": "query",
						"description": "Search resources by its type",
						"required": false,
						"schema": {
							"type": "string",
							"default": ""
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"categories": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"name": {
														"type": "string"
													},
													"services": {
														"type": "array",
														"items": {
															"properties": {
																"amount": {
																	"type": "string"
																},
																"after_approval_amount": {
																	"type": "string"
																},
																"background_color": {
																	"type": "string"
																},
																"booking_with": {
																	"type": "string"
																},
																"created_date": {
																	"type": "string",
																	"format": "date-time"
																},
																"description": {
																	"type": "string"
																},
																"icon": {
																	"type": "string"
																},
																"id": {
																	"type": "integer"
																},
																"status": {
																	"type": "integer"
																},
																"source_id": {
																	"type": "integer"
																},
																"template_id": {
																	"type": "integer"
																},
																"title": {
																	"type": "string"
																},
																"precautions": {
																	"type": "string"
																},
																"diagnosis": {
																	"type": "string"
																},
																"treatments": {
																	"type": "string"
																}
															},
															"type": "object"
														}
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/clients/{id}/services": {
			"get": {
				"tags": ["Services"],
				"summary": "get clients active sources",
				"description": "get clients all active sources",
				"operationId": "1b34e271488ca22d7eee3a664c0ee643",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "get clients all active sources",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "string"
													},
													"background_color": {
														"type": "string"
													},
													"booking_with": {
														"type": "string"
													},
													"created_at": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"icon": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"source_id": {
														"type": "string"
													},
													"template_id": {
														"type": "string"
													},
													"title": {
														"type": "string"
													},
													"precautions": {
														"type": "string"
													},
													"diagnosis": {
														"type": "string"
													},
													"treatments": {
														"type": "string"
													},
													"amount": {
														"type": "string"
													},
													"after_approval_amount": {
														"type": "integer"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/programs/{clientId}/{categoryId}": {
			"get": {
				"tags": ["Services"],
				"summary": "get clients active sources",
				"description": "get client programs",
				"operationId": "623ae0f383c9d03e7a645c116e9def2b",
				"parameters": [
					{
						"name": "clientId",
						"in": "path",
						"description": "get client programs",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "categoryId",
						"in": "path",
						"description": "get client programs",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "service_for",
						"in": "query",
						"description": "Service for",
						"required": false,
						"schema": {
							"type": "string",
							"enum": ["both", "trainer", "regular"]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "string"
													},
													"client_id": {
														"type": "string"
													},
													"template_id": {
														"type": "string"
													},
													"type_id": {
														"type": "string"
													},
													"title": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"source_id": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"booking_with": {
														"type": "string"
													},
													"price": {
														"type": "string"
													},
													"product_and_price": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/program/{programId}": {
			"get": {
				"tags": ["Services"],
				"summary": "get program product and prices",
				"description": "get program products",
				"operationId": "2c5583f5dbf6376b7b52c1ae68a37133",
				"parameters": [
					{
						"name": "programId",
						"in": "path",
						"description": "program id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "string"
													},
													"client_id": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"price": {
														"type": "string"
													},
													"original_price": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"source_id": {
														"type": "string"
													},
													"status": {
														"type": "string"
													},
													"booking_with": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/staterule?state_name=Alabama&source_id=22}": {
			"get": {
				"tags": ["Staterule"],
				"summary": "state rule implimentation",
				"description": "Get the state rule for the establishing care and continued care",
				"operationId": "4e397deb124665fc6f0fa871ad87cf16",
				"parameters": [
					{
						"name": "state_name",
						"in": "query",
						"description": "state name as a string",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "source_id",
						"in": "query",
						"description": "appointment source id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"establishingCare": {
													"type": "string"
												},
												"continuedCare": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object",
									"example": {
										"code": 0,
										"message": "success",
										"data": {
											"establishingCare": "asyncApptMode",
											"continuedCare": "phoneApptMode OR videoApptMode"
										}
									}
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					},
					"422": {
						"description": "validation error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/subcategories/{id}": {
			"get": {
				"tags": ["Sub Categories"],
				"summary": "Sub Category Details",
				"description": "Get the details of Sub Category",
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"description": "Get Sub Category By Id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"title": {
													"type": "string"
												},
												"alias": {
													"type": "string"
												},
												"status": {
													"type": "integer"
												},
												"description": {
													"type": "string"
												},
												"category_id": {
													"type": "json"
												},
												"client_id": {
													"type": "json"
												},
												"created_at": {
													"type": "string",
													"format": "date-time"
												},
												"updated_at": {
													"type": "string",
													"format": "date-time"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/{clientID}/{subcategoryId}/programs": {
			"get": {
				"tags": ["Services"],
				"summary": "Services Listing for Sub Category",
				"description": "List all the Services in database for a sub category",
				"parameters": [
					{
						"name": "clientID",
						"in": "path",
						"description": "Filter resources by clientID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "subcategoryId",
						"in": "path",
						"description": "Filter resources by subcategoryId",
						"required": true,
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "service_for",
						"in": "query",
						"description": "Service for",
						"required": false,
						"schema": {
							"type": "string",
							"enum": ["both", "trainer", "regular"]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"type": "integer"
													},
													"client_id": {
														"type": "integer"
													},
													"template_id": {
														"type": "integer"
													},
													"type_id": {
														"type": "integer"
													},
													"title": {
														"type": "string"
													},
													"sub_title": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"starting_price": {
														"type": "decimal"
													},
													"icon": {
														"type": "string"
													},
													"background_color": {
														"type": "string"
													},
													"status": {
														"type": "integer"
													},
													"source_id": {
														"type": "integer"
													},
													"booking_with": {
														"type": "string"
													},
													"sales_agent_role": {
														"type": "integer"
													},
													"created_at": {
														"type": "string",
														"format": "date-time"
													},
													"updated_at": {
														"type": "string",
														"format": "date-time"
													},
													"category_ids": {
														"type": "string"
													},
													"excluded_states": {
														"type": "string"
													},
													"short_description": {
														"type": "string"
													},
													"price": {
														"type": "decimal"
													},
													"product_and_price": {
														"type": "string"
													},
													"precautions": {
														"type": "string"
													},
													"diagnosis": {
														"type": "string"
													},
													"treatments": {
														"type": "string"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/programs/{id}": {
			"get": {
				"tags": ["Services"],
				"summary": "Service Details",
				"description": "Get the details of Service",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Get Service By Id",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"properties": {
												"id": {
													"type": "integer"
												},
												"client_id": {
													"type": "integer"
												},
												"template_id": {
													"type": "integer"
												},
												"type_id": {
													"type": "integer"
												},
												"title": {
													"type": "string"
												},
												"sub_title": {
													"type": "string"
												},
												"description": {
													"type": "string"
												},
												"starting_price": {
													"type": "decimal"
												},
												"icon": {
													"type": "string"
												},
												"background_color": {
													"type": "string"
												},
												"status": {
													"type": "integer"
												},
												"source_id": {
													"type": "integer"
												},
												"booking_with": {
													"type": "string"
												},
												"sales_agent_role": {
													"type": "integer"
												},
												"created_at": {
													"type": "string",
													"format": "date-time"
												},
												"updated_at": {
													"type": "string",
													"format": "date-time"
												},
												"category_ids": {
													"type": "string"
												},
												"excluded_states": {
													"type": "string"
												},
												"short_description": {
													"type": "string"
												},
												"price": {
													"type": "decimal"
												},
												"product_and_price": {
													"type": "string"
												},
												"precautions": {
													"type": "string"
												},
												"diagnosis": {
													"type": "string"
												},
												"treatments": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/questionnaires": {
			"get": {
				"tags": ["Questionnaires"],
				"summary": "Questionnaire Listing",
				"description": "Get the listing of all questionnaires",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Filter resources by page",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "per_page",
						"in": "query",
						"description": "Filter resources by per page",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sort_column",
						"in": "query",
						"description": "Sorting resources by column",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "sort_order",
						"in": "query",
						"description": "Sorting order",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"questionnaires": {
											"type": "array",
											"items": {
												"properties": {
													"created_time": {
														"type": "integer"
													},
													"is_practice_questionnaire": {
														"type": "boolean"
													},
													"member_id": {
														"type": "integer"
													},
													"pharmacy_id": {
														"type": "integer"
													},
													"template_id": {
														"type": "integer"
													},
													"questionnaire_name": {
														"type": "string"
													},
													"questionnaire_type": {
														"type": "string"
													}
												},
												"type": "object"
											}
										},
										"page_context": {
											"properties": {
												"page": {
													"type": "integer"
												},
												"per_page": {
													"type": "string"
												},
												"has_more_page": {
													"type": "boolean"
												},
												"sort_column": {
													"type": "string"
												},
												"sort_order": {
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/questionnaires/{template_id}": {
			"get": {
				"tags": ["Questionnaires"],
				"summary": "Questionnaire Detail",
				"description": "Get the details of questionnaires",
				"parameters": [
					{
						"name": "template_id",
						"in": "path",
						"description": "Filter resources by Template ID",
						"required": true,
						"schema": {
							"type": "integer"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "integer"
										},
										"message": {
											"type": "string"
										},
										"data": {
											"type": "array",
											"items": {
												"properties": {
													"className": {
														"type": "string"
													},
													"description": {
														"type": "string"
													},
													"entry_id": {
														"type": "string"
													},
													"inline": {
														"type": "string"
													},
													"is_deleted": {
														"type": "string"
													},
													"is_mandatory": {
														"type": "string"
													},
													"is_multi_choice": {
														"type": "string"
													},
													"notes": {
														"type": "string"
													},
													"notes_type": {
														"type": "string"
													},
													"placeholder": {
														"type": "string"
													},
													"position": {
														"type": "integer"
													},
													"template_id": {
														"type": "integer"
													}
												},
												"type": "object"
											}
										}
									},
									"type": "object"
								}
							}
						}
					},
					"401": {
						"description": "Unauthenticated"
					},
					"404": {
						"description": "Resource Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		},
		"/wellcore/patientStepStatus": {
			"post": {
				"tags": ["Wellcore"],
				"summary": "Update Patient Step Status",
				"description": "Update step status for wellcore patient",
				"operationId": "e91b4f598f9e6bbef825f3eae91a27d3",
				"requestBody": {
					"description": "Patient and Step data",
					"content": {
						"multipart/form-data": {
							"schema": {
								"required": ["patient_id", "order_id", "step_name"],
								"properties": {
									"patient_id": {
										"description": "Patient ID (auto increment id)",
										"type": "integer"
									},
									"order_id": {
										"description": "tasso_orders ID",
										"type": "integer"
									},
									"step_name": {
										"description": "name of step",
										"type": "string",
										"example": "intake_form for questionaire completion and schedule_wellcore_consultation for appointment schedule"
									}
								},
								"type": "object"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Operation",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									},
									"type": "object"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "Unauthenticated"
					},
					"500": {
						"description": "Internal Server Error"
					}
				},
				"security": [
					{
						"token": []
					}
				]
			}
		}
	},
	"components": {
		"responses": {
			"404": {
				"description": "Resource Not Found"
			},
			"500": {
				"description": "Internal Server Error"
			}
		},
		"securitySchemes": {
			"token": {
				"type": "http",
				"name": "Authorization",
				"in": "header",
				"scheme": "bearer"
			}
		}
	},
	"security": [[]]
}
